<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>残桥断雪的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-30T02:02:56.578Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>laigang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>你好, hexo</title>
    <link href="http://yoursite.com/2019/08/30/%E4%BD%A0%E5%A5%BD-hexo/"/>
    <id>http://yoursite.com/2019/08/30/你好-hexo/</id>
    <published>2019-08-30T01:59:46.000Z</published>
    <updated>2019-08-30T02:02:56.578Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这是另一台笔记本，我把项目移植过来以进行测试-如果这篇文章出现了，那说明我移植成功了"><a href="#这是另一台笔记本，我把项目移植过来以进行测试-如果这篇文章出现了，那说明我移植成功了" class="headerlink" title="这是另一台笔记本，我把项目移植过来以进行测试, 如果这篇文章出现了，那说明我移植成功了"></a>这是另一台笔记本，我把项目移植过来以进行测试, 如果这篇文章出现了，那说明我移植成功了</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;这是另一台笔记本，我把项目移植过来以进行测试-如果这篇文章出现了，那说明我移植成功了&quot;&gt;&lt;a href=&quot;#这是另一台笔记本，我把项目移植过来以进行测试-如果这篇文章出现了，那说明我移植成功了&quot; class=&quot;headerlink&quot; title=&quot;这是另一台笔记本
      
    
    </summary>
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/08/30/hello-world/"/>
    <id>http://yoursite.com/2019/08/30/hello-world/</id>
    <published>2019-08-30T01:49:29.561Z</published>
    <updated>2019-08-30T01:49:29.561Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Set Matrix Zeroes</title>
    <link href="http://yoursite.com/2019/05/27/Set-Matrix-Zeroes/"/>
    <id>http://yoursite.com/2019/05/27/Set-Matrix-Zeroes/</id>
    <published>2019-05-27T11:53:04.000Z</published>
    <updated>2019-08-30T01:49:29.561Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p> 给矩阵置0，就是找矩阵中为0的元素，将其同行同列置0,必须是就地算法（in-place）<br><a id="more"></a></p><ol><li><p>Example 1:</p><ul><li><p>input:  </p><p>  [</p><pre><code>[1,1,1],[1,0,1],[1,1,1]</code></pre><p>  ]</p></li><li><p>output:  </p><p>  [</p><pre><code>[1,0,1],[0,0,0],[1,0,1]</code></pre><p>  ]</p></li></ul></li></ol><ol start="2"><li><p>Example 2:  </p><ul><li><p>input:  </p><p>  [</p><pre><code>[0,1,2,0],[3,4,5,2],[1,3,1,5]</code></pre><p>  ]  </p></li><li><p>output:  </p><p>  [</p><pre><code>[0,0,0,0],[0,4,5,0],[0,3,1,0]</code></pre><p>  ]  </p></li></ul></li></ol><h2 id="整体思路"><a href="#整体思路" class="headerlink" title="整体思路"></a>整体思路</h2><h3 id="思路1-0版本，朴素想法"><a href="#思路1-0版本，朴素想法" class="headerlink" title="思路1.0版本，朴素想法"></a>思路1.0版本，朴素想法</h3><p>最朴素想法，先找为0的坐标，然后将其同行同列置0。这里有个小trick，找到为0的地方不能立即置0，下侧和右侧会导致判断失误。</p><h3 id="代码1-0"><a href="#代码1-0" class="headerlink" title="代码1.0"></a>代码1.0</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setZeroes</span><span class="params">(<span class="keyword">int</span>[][] matrix)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//最朴素想法，先找，然后置0</span></span><br><span class="line">        <span class="comment">//注意：置0不能影响后面</span></span><br><span class="line">        HashSet&lt;Integer&gt; row = <span class="keyword">new</span> HashSet&lt;&gt;(), col = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (matrix.length==<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> m = matrix.length, n = matrix[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (matrix[i][j]==<span class="number">0</span>)&#123;<span class="comment">// 填充0</span></span><br><span class="line">                    row.add(i);</span><br><span class="line">                    col.add(j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        置0</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i :</span><br><span class="line">                row) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; k++) matrix[i][k] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j :</span><br><span class="line">                col) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; m; k++)&#123;</span><br><span class="line">                matrix[k][j] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] nums :</span><br><span class="line">                matrix) &#123;</span><br><span class="line">            System.out.println(Arrays.toString(nums));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="思路2-0版本"><a href="#思路2-0版本" class="headerlink" title="思路2.0版本"></a>思路2.0版本</h3><p>上个版本肯定是不work的啦，毕竟最朴素想法时空只能打败30%左右的样子。作为一个<strong>never setter</strong>的人，怎么能容忍这么高的时空复杂度。<br><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1559564397&amp;di=30cb28ffdd1897d3444284a8a587bc33&amp;imgtype=jpg&amp;er=1&amp;src=http%3A%2F%2Fstatic.oneplus.cn%2Fdata%2Fattachment%2Fforum%2F201411%2F09%2F144717fimzeep1hynehbmr.png" alt="never settle"><br>上一种方法空间复杂度为O(m*n),我想办法降到O(1)。注意到当检查到matrix[i][j] == 0 ,不能直接所有行 列置0的原因是会影响下侧和右侧的判断。但是上侧和左侧不会影响，故我们不再使用HashMap，直接将matrix[i][0] = matrix[0][j] = 0 ,然后再检查一下行列开头即可。注意如果本来第0行或者第0列就有0，需要用一个flag来记忆一下，然后再判定置0。  </p><h3 id="代码2-0"><a href="#代码2-0" class="headerlink" title="代码2.0"></a>代码2.0</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setZeroes2</span><span class="params">(<span class="keyword">int</span>[][] matrix)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m = matrix.length, n = matrix[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">boolean</span> isCol = <span class="keyword">false</span>, isRow = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k&lt;m; ++k)&#123;</span><br><span class="line">            <span class="keyword">if</span> (matrix[k][<span class="number">0</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">                isCol = <span class="keyword">true</span>; <span class="comment">// 第一列应当置0</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k&lt;n; ++k)&#123;</span><br><span class="line">            <span class="keyword">if</span> (matrix[<span class="number">0</span>][k] == <span class="number">0</span>)&#123;</span><br><span class="line">                isRow = <span class="keyword">true</span>; <span class="comment">// 第一行应当置0</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (matrix[i][j]==<span class="number">0</span>)&#123;<span class="comment">// 填充0</span></span><br><span class="line">                    matrix[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                    matrix[<span class="number">0</span>][j] = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;m; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (matrix[i][<span class="number">0</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;n; ++j) matrix[i][j] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;n; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (matrix[<span class="number">0</span>][j] == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;m; ++i) matrix[i][j] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isRow)   <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k&lt;n; ++k) matrix[<span class="number">0</span>][k] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (isCol)   <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k&lt;m; ++k) matrix[k][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] nums :</span><br><span class="line">                matrix) &#123;</span><br><span class="line">            System.out.println(Arrays.toString(nums));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>中等题就是这样，解出来比较简单，但是想要拿个top还是比较难的。不管怎样，第二种解法也是top 98%的存在。那么就来个九转大肠鼓励一下自己吧！<br><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3477725904,3462716497&amp;fm=26&amp;gp=0.jpg" alt="九转大肠"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt; 给矩阵置0，就是找矩阵中为0的元素，将其同行同列置0,必须是就地算法（in-place）&lt;br&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/leetcode/"/>
    
    
      <category term="Matrix" scheme="http://yoursite.com/tags/Matrix/"/>
    
  </entry>
  
  <entry>
    <title>Regular Expression Matching</title>
    <link href="http://yoursite.com/2019/05/26/Regular-Expression-Matching/"/>
    <id>http://yoursite.com/2019/05/26/Regular-Expression-Matching/</id>
    <published>2019-05-26T12:29:25.000Z</published>
    <updated>2019-08-30T01:49:29.561Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>字符匹配问题  </p><ul><li>用p来匹配s. p中可能包含. *</li><li>. 表示匹配任一个单一字符</li><li>* 表示匹配0到多个前一个字符</li><li>要求p和s匹配</li></ul><ol><li>Example 1:<ul><li>Input:  <blockquote><p>s=”aa”<br>p = “a”</p></blockquote></li><li>Output: <strong>false</strong></li><li>Explanation:  <blockquote><p>“a” does not match the entire string “aa”</p></blockquote></li></ul></li><li>Example 2:<ul><li>Input:  <blockquote><p>s=”aa”<br>p = “a*”</p></blockquote></li><li>Output: <strong>true</strong></li><li>Explanation:  <blockquote><p>“‘*’ means zero or more of the precedeng element, ‘a’. Therefore, by repeating ‘a’ once, it becomes “aa”</p></blockquote></li></ul></li><li>Example 3:<ul><li>Input:  <blockquote><p>s=”aab”<br>p = “c*a*b”</p></blockquote></li><li>Output: <strong>true</strong></li><li>Explanation:  <blockquote><p>c can be repeated 0 times, a can be repeated 1 time. Therefore it matches “aab”.</p></blockquote></li></ul></li></ol><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>这是一道<strong>非常</strong>困难的题, 曾经害我苦思冥想了好几天。我刚开始甚至没想到居然能用DP解这个问题，后来苦苦求索翻阅leetcode一众大神的解释后才搞明白这个题用DP到底怎么搞<br>这是一道true false dp问题, dp[i][j] 表示了s前i个元素和p前j个元素的匹配情况<br>分情况讨论：  </p><ol><li>如果s[i] == p [j] || p[j] == ‘.’<br>这时候完全就看前面的情况 dp[i][j] = dp[i-1][j-1]</li><li><p>如果s[i] != p [j]这个也要分情况  </p><ul><li><p>2.1 如果p[j] == ‘*‘ (ba a* ab a*)  </p><ul><li><p>2.1.1 若 p[j-1] != s[i] &amp;&amp; p[j-1] != ‘.’<br>此时, 由于上一个元素不匹配导致*无法复制，那么*只能让上一个元素清空:  </p><blockquote><p>dp[i][j] = dp[i][j-2]  </p></blockquote></li><li><p>2.1.2 除上面的情况外，即*可以复制上一个元素达到匹配的目的，当然也可以不复制上一个元素:  </p><blockquote><p>dp[i][j] = dp[i][j-2] (<em>上一个元素清空</em>) || dp[i][j-1] (<em>\</em>只代表一个元素<em>) || dp[i-1][j] (</em>代表多个元素，如果在i前面都能和p匹配，那加一个自然也能匹配*)</p></blockquote></li></ul></li><li><p>2.2 如果p[j] != ‘*’  </p><blockquote><p>dp[i][j] = false</p></blockquote></li></ul></li></ol><p>特别解释一下，为什么在2.1.2中，当代表多个元素时，匹配的是dp[i-1][j]这个奇怪的搭配。让我们来举个栗子:<br><img src="https://cn.bing.com/th?id=OIP.KxkJwLabDhEU-WmW2u8LoAHaHQ&amp;pid=Api&amp;rs=1&amp;p=0" alt="举个栗子"><br>假设我们的有  </p><blockquote><p>s: abbbbb<br>p: cb*  </p></blockquote><p>我们看到这里的*，实际上是代表了5个b,但是当我们求dp[i][j]的时候，我们无法得匹配完这些b之后前面的元素是否匹配，我们删掉这些b  </p><blockquote><p>s: a<br>p: c  </p></blockquote><p>也就是说，a,c是否匹配已经在之前迭代了。如何得知a,c的迭代位置呢？  </p><blockquote><p>dp[i][j] = dp[i-1][j] = …… = dp[i-6][j]</p></blockquote><p>这是通过我们之前已经求到的结果迭代出来的，你会发现i递减的过程其实就是在找重复元素之前的元素，所以我们直接给出了dp[i-1][j]</p><h2 id="标准代码"><a href="#标准代码" class="headerlink" title="标准代码"></a>标准代码</h2><p>其实如果能看懂上面的解释的话，代码不成问题，上面的解释已经接近于伪代码了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span>  <span class="keyword">boolean</span> <span class="title">isMatch</span><span class="params">(String s, String p)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span>[][] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[s.length()+<span class="number">1</span>][p.length()+<span class="number">1</span>];</span><br><span class="line">        <span class="comment">// s为空, p为空</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">// s为空， p不空</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= p.length(); j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p.charAt(j-<span class="number">1</span>)==<span class="string">'*'</span> &amp;&amp; dp[<span class="number">0</span>][j-<span class="number">2</span>]) dp[<span class="number">0</span>][j] = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//s不空，p空，直接默认false</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; s.length() + <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; p.length() + <span class="number">1</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (s.charAt(i-<span class="number">1</span>)==p.charAt(j-<span class="number">1</span>) || p.charAt(j-<span class="number">1</span>)==<span class="string">'.'</span>) dp[i][j] = dp[i-<span class="number">1</span>][j-<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (p.charAt(j-<span class="number">1</span>)==<span class="string">'*'</span>)&#123;</span><br><span class="line">                        <span class="keyword">if</span> (p.charAt(j-<span class="number">2</span>)!=s.charAt(i-<span class="number">1</span>)&amp;&amp;p.charAt(j-<span class="number">2</span>)!=<span class="string">'.'</span>) dp[i][j] = dp[i][j-<span class="number">2</span>];</span><br><span class="line">                        <span class="keyword">else</span> dp[i][j] = dp[i][j-<span class="number">2</span>] || dp[i][j-<span class="number">1</span>] || dp[i-<span class="number">1</span>][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[s.length()][p.length()];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>终于啃完这个头疼的问题了，看张图片奖励下自己吧<br><img src="http://pic8.nipic.com/20100702/5155385_015834315161_2.jpg" alt="bing图片"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;字符匹配问题  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用p来匹配s. p中可能包含. *&lt;/li&gt;
&lt;li&gt;. 表示匹配任一个单一字符
      
    
    </summary>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/leetcode/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>ClimbingStairs</title>
    <link href="http://yoursite.com/2019/05/25/ClimbingStairs/"/>
    <id>http://yoursite.com/2019/05/25/ClimbingStairs/</id>
    <published>2019-05-25T13:57:17.000Z</published>
    <updated>2019-08-30T01:49:29.561Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>这道题是easy题：<br>You are climbing a stair case. It takes n steps to reach to the top.</p><p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?  </p><ol><li>example1:<br>Input: 2<br>Output: 2<br>Explanation:  <ol><li>1 step + 1 step</li><li>2 steps</li></ol></li><li>example2:<br>Input: 3<br>Output: 3<br>Explanation:  <ol><li>1 step + 1 step + 1 step</li><li>1 step + 2 steps</li><li>2 steps + 1 step</li></ol></li></ol><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这个就很简单了, 典型的计数型动态规划问题，常规做法：<br>记dp[n] 表示到高度n有dp[n]种方法，则dp[n] = dp[n-1]+dp[n-2]<br>边界：<br>dp[0] = 1 dp[1] = 2<br>计算顺序：从左到右  </p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (n&gt;<span class="number">1</span>) dp[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (n&gt;<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line">                dp[i] = dp[i-<span class="number">1</span>]+dp[i-<span class="number">2</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;这道题是easy题：&lt;br&gt;You are climbing a stair case. It takes n steps 
      
    
    </summary>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/leetcode/"/>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>孔雀东南飞（中文测试）</title>
    <link href="http://yoursite.com/2019/05/24/%E4%B8%AD%E6%96%87%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2019/05/24/中文测试/</id>
    <published>2019-05-24T11:58:53.000Z</published>
    <updated>2019-08-30T01:49:29.561Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gss0.bdstatic.com/-4o3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=b5fc92eb75094b36cf9f13bfc2a517bc/d1160924ab18972b50566cfee5cd7b899e510a91.jpg" alt="孔雀东南飞插图"></p><ul><li><em>汉末建安中，庐江府小吏焦仲卿妻刘氏，为仲卿母所遣，自誓不嫁。其家逼之，乃投水而死。仲卿闻之，亦自缢于庭树。时人伤之，为诗云尔。</em>  <a id="more"></a></li><li>孔雀东南飞，五里一徘徊。  </li><li>十三能织素6，十四学裁衣，十五弹箜篌7，十六诵诗书8。十七为君妇，心中常苦悲。君既为府吏，守节9情不移。贱妾留空房，相见常日稀。鸡鸣入机织，夜夜不得息。三日断10五匹，大人故嫌迟11。非为织作迟，君家妇难为！妾不堪12驱使，徒13留无所施14。便可白公姥15，及时相遣归  </li><li>府吏得闻之，堂上启阿母：“儿已薄禄相16，幸复得此妇，结发17同枕席，黄泉共为友。共事二三年，始尔18未为久。女行无偏斜，何意致不厚19？”  </li><li>阿母谓府吏：“何乃太区区20！此妇无礼节，举动自专由21。吾意久怀忿，汝岂得自由！东家有贤22女，自名秦罗敷，可怜23体无比，阿母为汝求。便可速遣之，遣去慎莫留！”  </li><li>府吏长跪告：“伏惟24启阿母，今若遣此妇，终老不复取25！”  </li><li>阿母得闻之，槌床26便大怒：“小子无所畏，何敢助妇语！吾已失恩义，会不相从许27！”  </li><li>府吏默无声，再拜还入户。举言28谓新妇29，哽咽不能语：“我自不驱卿，逼迫有阿母。卿但暂还家，吾今且报府30。不久当归还，还必相迎取。以此下心意31，慎勿违吾语。”  </li><li>新妇谓府吏：“勿复重纷纭32。往昔初阳岁33，谢34家来贵门。奉事循公姥，进止敢自专？昼夜勤作息35，伶俜萦苦辛36。谓言37无罪过，供养卒38大恩；仍更被驱遣，何言复来还！妾有绣腰襦39，葳蕤40自生光；红罗复斗帐，四角垂香囊；箱帘41六七十，绿碧青丝绳，物物各自异，种种在其中。人贱物亦鄙，不足迎后人42，留待作遗施43，于今无会因44。时时为安慰，久久莫相忘！”  </li><li>鸡鸣外欲曙，新妇起严妆45。著我绣夹裙，事事四五通46。足下蹑47丝履，头上玳（dài）瑁（mào）48光。腰若流纨素，耳著明月珰49。指如削葱根，口如含朱丹。纤纤作细步，精妙世无双。  </li><li>上堂拜阿母，阿母怒不止。“昔作女儿时50，生小出野里51。本自无教训，兼愧52贵家子。受母钱帛多，不堪母驱使。今日还家去，念母劳家里。”却53与小姑别，泪落连珠子。“新妇初来时，小姑始扶床；今日被驱遣，小姑如我长。勤心养公姥，好自相扶将54。初七及下九55，嬉戏莫相忘。”出门登车去，涕落百余行。  </li><li>府吏马在前，新妇车在后。隐隐56何甸甸，俱会大道口。下马入车中，低头共耳语：“誓不相隔卿，且暂还家去；吾今且赴府，不久当还归。誓天不相负！”57  </li><li>新妇谓府吏：“感君区区58怀！君既若见录59，不久望君来。君当作磐石，妾当作蒲苇，蒲苇纫60如丝，磐石无转移。我有亲父兄61，性行暴如雷，恐不任我意，逆62以煎我怀。”举手长劳劳63，二情同依依。  </li><li>入门上家堂，进退无颜仪64。阿母大拊掌65，不图子自归66：“十三教汝织，十四能裁衣，十五弹箜篌，十六知礼仪，十七遣汝嫁，谓言无誓违67。汝今何罪过，不迎而自归？”兰芝惭阿母：“儿实无罪过。”阿母大悲摧68。  </li><li>还家十余日，县令遣媒来。云有第三郎，窈窕69世无双。年始十八九，便言多令才70。  </li><li>阿母谓阿女：“汝可去应之。”  </li><li>阿女含泪答：“兰芝初还时，府吏见丁宁71，结誓不别离。今日违情义，恐此事非奇72。自可断来信73，徐徐更谓之74。”  </li><li>阿母白媒人：“贫贱有此女，始适75还家门。不堪76吏人妇，岂合令郎君？幸可广问讯，不得便相许。”  </li><li>媒人去数日，寻遣丞请还，说有兰家女，丞籍有宦官77。云有第五郎，娇逸78未有婚。遣丞为媒人，主簿79通语言。直说太守家，有此令郎君，既欲结大义，故遣来贵门。  </li><li>阿母谢媒人：“女子先有誓，老姥岂敢言！”  </li><li>阿兄得闻之，怅然心中烦。举言谓阿妹：“作计80何不量81！先嫁得府吏，后嫁得郎君，否泰82如天地，足以荣汝身。不嫁义郎83体，其往欲何云84？”  </li><li>兰芝仰头答：“理实如兄言。谢家事夫婿，中道还兄门。处分85适86兄意，那得自任专！虽与府吏要87，渠会88永无缘。登即89相许和，便可作婚姻。“  </li><li>媒人下床去，诺诺复尔尔90。还部白府君91：“下官92奉使命，言谈大有缘93。”府君得闻之，心中大欢喜。视历94复开书，便利此月内，六合95正相应。良吉三十日，今已二十七，卿96可去成婚。交语97速装束，络绎如浮云。青雀白鹄舫98，四角龙子幡99。婀娜100随风转，金车玉作轮。踯躅101青骢马102，流苏103金镂鞍。赍104钱三百万，皆用青丝穿。杂彩105三百匹，交广106市鲑107珍。从人四五百，郁郁108登郡门。  </li><li>阿母谓阿女：“适109得府君书，明日来迎汝。何不作衣裳？莫令事不举110！”  </li><li>阿女默无声，手巾掩口啼，泪落便如泻。移我琉璃榻111，出置前窗下。左手持刀尺，右手执绫罗。朝成绣夹裙，晚成单罗衫。晻晻112日欲暝，愁思出门啼。  </li><li>府吏闻此变，因求假暂归。未至二三里，摧藏113马悲哀。新妇识马声，蹑履相逢迎。怅然遥相望，知是故人来。举手拍马鞍，嗟叹使心伤：“自君别我后，人事不可量114。果不如先愿，又非君所详。我有亲父母115，逼迫兼弟兄116。以我应他人，君还何所望！”  </li><li>府吏谓新妇：“贺卿得高迁！磐石方且厚，可以卒千年；蒲苇一时纫，便作旦夕间。卿当日胜贵117，吾独向黄泉！”  </li><li>新妇谓府吏：“何意出此言！同是被逼迫，君尔妾亦然。黄泉下相见，勿违今日言！”执手分道去，各各还家门。生人作死别，恨恨118那可论？念与世间辞，千万不复全！  </li><li>府吏还家去，上堂拜阿母：“今日大风寒，寒风摧树木，严霜结庭兰。儿今日冥冥119，令母在后单120。故121作不良计122，勿复怨鬼神！命如南山石，四体123康且直124！”  </li><li>阿母得闻之，零泪应声落：“汝是大家子，仕宦于台阁125。慎勿为妇死，贵贱情何薄126！东家有贤女，窈窕艳城郭，阿母为汝求，便复在旦夕。”  </li><li>府吏再拜还，长叹空房中，作计乃尔立127。转头向户里，渐见愁煎迫。  </li><li>其日牛马嘶，新妇入青庐128。奄奄129黄昏130后，寂寂人定初。“我命绝今日，魂去尸长留！”揽裙脱丝履，举身赴清池。  </li><li>府吏闻此事，心知长别离。徘徊庭树下，自挂东南枝。  </li><li>两家求合葬，合葬华山131傍。东西植松柏，左右种梧桐。枝枝相覆盖，叶叶相交通132。中有双飞鸟，自名为鸳鸯。仰头相向鸣，夜夜达五更。行人驻足133听，寡妇起彷徨。多谢134后世人，戒之慎勿忘！ [10]</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://gss0.bdstatic.com/-4o3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=b5fc92eb75094b36cf9f13bfc2a517bc/d1160924ab18972b50566cfee5cd7b899e510a91.jpg&quot; alt=&quot;孔雀东南飞插图&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;汉末建安中，庐江府小吏焦仲卿妻刘氏，为仲卿母所遣，自誓不嫁。其家逼之，乃投水而死。仲卿闻之，亦自缢于庭树。时人伤之，为诗云尔。&lt;/em&gt;
    
    </summary>
    
      <category term="文言文" scheme="http://yoursite.com/categories/%E6%96%87%E8%A8%80%E6%96%87/"/>
    
    
      <category term="文学" scheme="http://yoursite.com/tags/%E6%96%87%E5%AD%A6/"/>
    
  </entry>
  
</feed>
